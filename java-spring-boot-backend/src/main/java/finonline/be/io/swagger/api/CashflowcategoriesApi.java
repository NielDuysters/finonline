/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.54).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package finonline.be.io.swagger.api;

import finonline.be.io.swagger.model.CashflowCategory;
import finonline.be.io.swagger.model.CashflowcategoriesBody;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import jakarta.annotation.Generated;
import jakarta.servlet.http.HttpServletRequest;

import org.springframework.http.ResponseEntity;
import org.springframework.security.core.Authentication;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;

@Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2024-04-11T01:42:52.374827+02:00[Europe/Brussels]")
@Validated
public interface CashflowcategoriesApi {

    @Operation(summary = "Add cashflowcategory of an user.", description = "Add cashflowcategory to the categories of the authenticated user.", security = {
        @SecurityRequirement(name = "finonline_backend_auth")    }, tags={ "cashflowcategory" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "201", description = "CashflowCategory successfully added.", content = @Content(mediaType = "application/json", schema = @Schema(implementation = CashflowCategory.class))),
        
        @ApiResponse(responseCode = "401", description = "Unauthorized."),
        
        @ApiResponse(responseCode = "409", description = "User already has a cashflowcategory of this type with this label.") })
    @RequestMapping(value = "/cashflowcategories",
        produces = { "application/json" }, 
        consumes = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<CashflowCategory> addCashflowCategory(Authentication authentication, HttpServletRequest request, @Parameter(in = ParameterIn.DEFAULT, description = "Properties of cashflowCategory to add.", required=true, schema=@Schema()) @Valid @RequestBody CashflowcategoriesBody body);


    @Operation(summary = "Delete a cashflowcategory.", description = "Delete a cashflowcategory with id {id} if it belongs to user making the request.", security = {
            @SecurityRequirement(name = "finonline_backend_auth")    }, tags={ "cashflowcategory" })
        @ApiResponses(value = { 
            @ApiResponse(responseCode = "200", description = "Cashflowcategory deleted."),
            
            @ApiResponse(responseCode = "401", description = "Unauthorized.") })
        @RequestMapping(value = "/cashflowcategories/{id}",
            method = RequestMethod.DELETE)
        ResponseEntity<Void> deleteCashflowCategory(@Parameter(in = ParameterIn.PATH, description = "", required=true, schema=@Schema()) @PathVariable("id") Integer id
    );

    @Operation(summary = "Get all cashflowcategories of authenticated user.", description = "Get all cashflowcategories of authenticated user by checking JWT-token in request.", security = {
        @SecurityRequirement(name = "finonline_backend_auth")    }, tags={ "cashflowcategory" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "Cashflowcategories successfully retrieved.", content = @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = CashflowCategory.class)))),
        
        @ApiResponse(responseCode = "401", description = "Unauthorized.") })
    @RequestMapping(value = "/cashflowcategories",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<CashflowCategory>> getCashflowCategories(Authentication authentication, HttpServletRequest request);

}

